This readme explains the content of the scripts for running the ATAC analysis pipeline

	REQUISITES:
		Scripts submitted from the scripts/sequencing folder.
		The ${DATADIR} variable of the config file edited to be specific to the dataset.
		Users require a username folder in the ATACSeq/logFiles directory.

#### Data pre-processing:

1. sbatch --array=<number of batch jobs> ATACSeq/jobSubmission/batchRunAlignment.sh <project-name> [<STEPS>]

Parameters in [] are optional.

This script searchs within raw data folders for all fastq files
Then submits a batch script to process one sample
	* executes fastqc.sh

	* executes fastp.sh
		
	* executes ATACSeq/preprocessing/2_alignmentPE.sh 

	* executes ATACSeq/preprocessing/3_calcENCODEQCMetricsPE.sh ${sampleID}_sorted_chr1.bam
	
	<project-name> the name of the project folder in the main data type data directory
	
	-optional- 

	[<STEPS>] option of either FASTQC, TRIM, ALIGN or ENCODE. The first runs only fastqc on the samples, the second trims, the third runs only the alignment and the last calculates the ENCODE QC metrics. Option to combine steps with desired steps included as single string, i.e. FASTQC,TRIM. Default if left blank is to run all steps. 


2. sbatch --array=<number of batch jobs/10> ATACSeq/jobSubmission/batchCalcQCMetrics.sh  <project-name>

This script uses the ATACseqQC R package to generate the fragment distribution and calculate some summary statistics. It splits the samples into groups of 10 to run in parallel, so batch number should be the number of samples divided by 10.
	* executes ATACSeq/preprocessing/4_fragmentDistribution.r <aligned dir> <array-number>

3. sbatch --array=<number of batch jobs> ATACSeq/jobSubmission/batchRunPeakCalling.sh <project-name>
This script searchs within aligned data folders for all bam files
Then submits a batch script to process one sample
	* executes ATACSeq/preprocessing/5_shiftAlignedReadsPE.sh 
		* takes a filtered bam file converts to a tagalign file, calculate CC scores and shifts reads ready for peak calling
	* executes ATACSeq/preprocessing/6_samplePeaks.sh
		* which runs MAC peak calling with shifted tagAlign files and with BAM files and paired end reads
		* it then filters the peaks to exclude those that overlap with blacklisted regions
	* executes ATACSeq/preprocessing/7_calcFrip.sh 
		* calculates fraction of reads in peaks for each set of peaks
	
4. sbatch ATACSeq/jobSubmission/collateStage1QCMetrics.sh  <project-name>
This scripts uses MultiQC to collate the output of fastqc and bowtie2 alginment. It also runs the following utility scripts.
	* executes ATACSeq/preprocessing/8_progressReport.sh 
		* identifies how many samples have been successful at each stage of the processing pipeline and for each fastq file, how far through the process it has progressed.
	* executes ATACSeq/preprocessing/9_countMTReads.sh
		* collates counts of the number of reads aligned to MT chromosome
	* executes ATACSeq/preprocessing/10_collateFlagStatOutput.sh 
		* collates flagstat summary of aligned sorted reads.


5. collateSumStats.r 

6.

7. sbatch --array=<number of batch jobs> ATACSeq/jobSubmission/batchFormatSexChrs.sh <project-name>
	* executes ./ATACSeq/preprocessing/subsetSexChrs.sh for all samples that pass stage 1 filtering
		* performs variant calling on the X chromosome
		* subsets tagalign files to X and Y chromosome reads
		
8. sbatch ATACSeq/jobSubmission/sexCheck.sh
	* executes ATACSeq/preprocessing/sexChrPeaks.sh which performs peak calling on the sex chromomes, filter and read counts
	* collates X chr variants calling and recalls genotypes jointly
	* collates the three different sex checks and reports the output,

6. peak calling per sample type

7. idr analysis against sample peaks

8. pca analysis of peaks 

#### Misc data preprocessing

mergeFastq.sh
Where a sample was procesed multiple times, the fastq files are merged. 

#### OUTPUT files

| Script | Filename | Description | Downstream processing |
| ------ | -------- | ----------- | --------------------- |
| fastqc.sh | * | FastQC report | Input for QC summary |
| fastp.sh | *_trimmed.f*q | Trimmed raw sequence file output from fastp input | Input for alignment |
| 2_alignmentPE.sh | ${ALIGNEDDIR}/*_statsperchr.txt | Counts of number of reads mapped to each chromosome before any filtering | Input to CountMTReads.sh |
| 2_alignmentPE.sh | ${ALIGNEDDIR}/*_sorted.bam | Aligned reads, sorted and indexed | Input to calcATACQCMetrics.r |
| 2_alignmentPE.sh | ${ALIGNEDDIR}/*_sorted_chr1.bam | Aligned chr 1 reads, sorted and indexed | Input to calcENCODEQCMetricsPE.sh |
| 2_alignmentPE.sh | 
${ALIGNEDDIR}/*_dupMetrics.txt | Output of Picard with duplication statistics | ? |
| 2_alignmentPE.sh | ${ALIGNEDDIR}/*_depDup_q30.bam | Aligned reads with MT chr, low quality (q < 30),improperly paired reads, pcr optical duplicates, secondary alignments excluded, sorted and indexed  | Input to peak calling |
| 2_alignmentPE.sh | ${ALIGNEDDIR}/*_postFilter_statsperchr.txt | Counts of number of reads mapped to each chromosome after filtering  |  |
 